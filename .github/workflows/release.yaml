name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release and Build Artifacts
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Trigger Release Please
      - name: Trigger Release Please
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: go
          bump-minor-pre-major: true
          changelog-path: CHANGELOG.md
          skip-github-pull-request: true # Skip PR to apply directly

      # Step 3: Set Up Environment for Building
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      # Step 4: Build Artifacts
      - name: Build binaries
        strategy:
          matrix:
            os: [linux, darwin, windows]
            arch: [amd64, arm64]
        run: |
          mkdir -p dist
          OUTPUT_NAME="your-project-${{ matrix.os }}-${{ matrix.arch }}"
          if [ "${{ matrix.os }}" = "windows" ]; then
            OUTPUT_NAME="${OUTPUT_NAME}.exe"
          fi
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -ldflags="-X 'main.version=${{ steps.release.outputs.release_tag }}'" -o dist/$OUTPUT_NAME

      # Step 5: Upload Artifacts to Release
      - name: Attach binaries to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release.outputs.release_tag }}
          name: Release ${{ steps.release.outputs.release_tag }}
          body_path: CHANGELOG.md
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
