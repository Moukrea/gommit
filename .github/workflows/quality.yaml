name: Quality

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'CHANGELOG.md'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
    paths-ignore:
      - 'CHANGELOG.md'

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      # - name: Checkout code
      #   uses: actions/checkout@v4
      #   with:
      #     fetch-depth: 0

      # - name: Install Go CTRF JSON reporter 
      #   run: |
      #     go install github.com/ctrf-io/go-ctrf-json-reporter/cmd/go-ctrf-json-reporter@latest

      # - name: Install Go Junit report
      #   run: |
      #     go install github.com/jstemmer/go-junit-report/v2@latest

      # - name: Run tests with coverage
      #   run: |
      #     cd gommit
      #     go test -v -coverprofile=coverage.out -covermode=set ./... -json > test-report.out
      #     # Generate CTRF JSON report to publish results
      #     cat test-report.out | go-ctrf-json-reporter -output ctrf-report.json
      #     # Create Junit test report for Codecov integration
      #     go test -v 2>&1 ./... | go-junit-report -set-exit-code > ../junit.xml

      # - name: Publish CTRF Test Results
      #   run: npx github-actions-ctrf gommit/ctrf-report.json
      #   if: always()

      # - name: Clean previous bot comments
      #   if: github.event_name == 'pull_request'
      #   run: |
      #     # Get PR number from GitHub context
      #     PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          
      #     # List all comments and delete those from github-actions[bot]
      #     gh api repos/${{ github.repository }}/issues/$PR_NUMBER/comments \
      #       | jq '.[] | select(.user.login == "github-actions[bot]") | .id' \
      #       | xargs -I {} gh api repos/${{ github.repository }}/issues/comments/{} -X DELETE
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Publish CTRF pull request comment
      #   run: npx github-actions-ctrf pull-request gommit/ctrf-report.json
      #   if: github.event_name == 'pull_request'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: SonarQube Cloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}

      # - name: Upload test results to Codecov
      #   if: ${{ !cancelled() }}
      #   uses: codecov/test-results-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: gommit/coverage.out